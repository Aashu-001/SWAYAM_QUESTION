/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode* temp = head;
        int count = 0;
        while(temp!= NULL){
          temp = temp->next;
          count++;
        }
        if(count < 2 || k % count == 0 ){
            return head;
        }
       
        int b = count - (k % count) - 1;
        temp =head;
        while(b--){
          temp = temp ->next;
        }
        ListNode* beg = temp->next;
        temp->next = NULL;
        
        temp = beg;
        while(temp->next != NULL){
            temp = temp->next;
        }
        temp->next = head;
     return beg;   

    }
};
